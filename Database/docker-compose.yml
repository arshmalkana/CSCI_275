services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ahpunjab-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ahpunjab
      POSTGRES_PASSWORD: ahpunjab_dev_2024
      POSTGRES_DB: ahpunjab_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      # Mount schema and seed files (numbered for execution order)
      - ./init/01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./init/02-seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
      - ./init/03-villages-full.sql:/docker-entrypoint-initdb.d/03-villages-full.sql
      - ./init/04-test-users.sql:/docker-entrypoint-initdb.d/04-test-users.sql
      - ./init/05-webauthn.sql:/docker-entrypoint-initdb.d/05-webauthn.sql
      - ./init/06-refresh-tokens.sql:/docker-entrypoint-initdb.d/06-refresh-tokens.sql
      # Comment out for dev to reseed every time, uncomment for production 
      # - postgres_data:/var/lib/postgresql/data
      # Persist data even when container stops
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ahpunjab -d ahpunjab_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin (Optional - Web UI for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ahpunjab-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  postgres_data:
    name: ahpunjab_postgres_data
  pgadmin_data:
    name: ahpunjab_pgadmin_data
